version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: postgres_password_app_fullstack
    volumes:
      - postgres_data_fullstack:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=password_app
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: backend_password_app_fullstack
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ./backend/.env
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app
      - /app/tmp
      - /go/pkg/mod
    restart: always
    stdin_open: true
    tty: true

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: frontend_password_app_fullstack
    depends_on:
      - backend
    ports:
      - "19006:19006"
      - "19000:19000"
      - "19001:19001"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
    restart: always
    stdin_open: true
    tty: true

volumes:
  postgres_data_fullstack: 